---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: dataplaneresources.resources.azapi.upbound.io
spec:
  group: resources.azapi.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - azapi
    kind: DataPlaneResource
    listKind: DataPlaneResourceList
    plural: dataplaneresources
    singular: dataplaneresource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DataPlaneResource is the Schema for the DataPlaneResources API.
          Manages a Azure data plane resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataPlaneResourceSpec defines the desired state of DataPlaneResource
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  body:
                    description: A JSON object that contains the request body used
                      to create and update data plane resource.
                    type: string
                  ignoreCasing:
                    description: Whether ignore incorrect casing returned in body
                      to suppress plan-diff. Defaults to false.
                    type: boolean
                  ignoreMissingProperty:
                    description: Whether ignore not returned properties like credentials
                      in body to suppress plan-diff. Defaults to true.
                    type: boolean
                  locks:
                    description: A list of ARM resource IDs which are used to avoid
                      create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the azure resource. Changing
                      this forces a new resource to be created.
                    type: string
                  parentId:
                    description: The ID of the azure resource in which this resource
                      is created. Changing this forces a new resource to be created.
                    type: string
                  responseExportValues:
                    description: |-
                      A list of path that needs to be exported from response body.
                      Setting it to ["*"] will export the full response body.
                      Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
                    items:
                      type: string
                    type: array
                  type:
                    description: It is in a format like <resource-type>@<api-version>.
                      <api-version> is version of the API used to manage this azure
                      data plane resource.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  body:
                    description: A JSON object that contains the request body used
                      to create and update data plane resource.
                    type: string
                  ignoreCasing:
                    description: Whether ignore incorrect casing returned in body
                      to suppress plan-diff. Defaults to false.
                    type: boolean
                  ignoreMissingProperty:
                    description: Whether ignore not returned properties like credentials
                      in body to suppress plan-diff. Defaults to true.
                    type: boolean
                  locks:
                    description: A list of ARM resource IDs which are used to avoid
                      create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the azure resource. Changing
                      this forces a new resource to be created.
                    type: string
                  parentId:
                    description: The ID of the azure resource in which this resource
                      is created. Changing this forces a new resource to be created.
                    type: string
                  responseExportValues:
                    description: |-
                      A list of path that needs to be exported from response body.
                      Setting it to ["*"] will export the full response body.
                      Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
                    items:
                      type: string
                    type: array
                  type:
                    description: It is in a format like <resource-type>@<api-version>.
                      <api-version> is version of the API used to manage this azure
                      data plane resource.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.parentId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.parentId)
                || (has(self.initProvider) && has(self.initProvider.parentId))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: DataPlaneResourceStatus defines the observed state of DataPlaneResource.
            properties:
              atProvider:
                properties:
                  body:
                    description: A JSON object that contains the request body used
                      to create and update data plane resource.
                    type: string
                  id:
                    description: The ID of the azure resource.
                    type: string
                  ignoreCasing:
                    description: Whether ignore incorrect casing returned in body
                      to suppress plan-diff. Defaults to false.
                    type: boolean
                  ignoreMissingProperty:
                    description: Whether ignore not returned properties like credentials
                      in body to suppress plan-diff. Defaults to true.
                    type: boolean
                  locks:
                    description: A list of ARM resource IDs which are used to avoid
                      create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: Specifies the name of the azure resource. Changing
                      this forces a new resource to be created.
                    type: string
                  output:
                    description: The output json containing the properties specified
                      in response_export_values. Here're some examples to decode json
                      and extract the value.
                    type: string
                  parentId:
                    description: The ID of the azure resource in which this resource
                      is created. Changing this forces a new resource to be created.
                    type: string
                  responseExportValues:
                    description: |-
                      A list of path that needs to be exported from response body.
                      Setting it to ["*"] will export the full response body.
                      Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
                    items:
                      type: string
                    type: array
                  type:
                    description: It is in a format like <resource-type>@<api-version>.
                      <api-version> is version of the API used to manage this azure
                      data plane resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: DataPlaneResource is the Schema for the DataPlaneResources API.
          This resource can manage some Azure data plane resources.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataPlaneResourceSpec defines the desired state of DataPlaneResource
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  body:
                    description: |-
                      (Dynamic) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    x-kubernetes-preserve-unknown-fields: true
                  createHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the create request.
                      A mapping of headers to be sent with the create request.
                    type: object
                    x-kubernetes-map-type: granular
                  createQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the create request.
                      A mapping of query parameters to be sent with the create request.
                    type: object
                  deleteHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the delete request.
                      A mapping of headers to be sent with the delete request.
                    type: object
                    x-kubernetes-map-type: granular
                  deleteQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the delete request.
                      A mapping of query parameters to be sent with the delete request.
                    type: object
                  ignoreCasing:
                    description: |-
                      (Boolean) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    type: boolean
                  ignoreMissingProperty:
                    description: |-
                      diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
                      Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
                    type: boolean
                  locks:
                    description: |-
                      (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                      A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                      Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                    type: string
                  parentId:
                    description: |-
                      (String) The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                      The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                    type: string
                  readHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the read request.
                      A mapping of headers to be sent with the read request.
                    type: object
                    x-kubernetes-map-type: granular
                  readQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the read request.
                      A mapping of query parameters to be sent with the read request.
                    type: object
                  replaceTriggersExternalValues:
                    description: |-
                      (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
                      If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
                      Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
                      If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.

                      e.g. to replace a resource when either the SKU or os_type attributes change:

                      ```hcl
                      resource "azapi_data_plane_resource" "example" {
                      name = var.name
                      type = "Microsoft.AppConfiguration/configurationStores/keyValues@1.0"
                      body = {
                      properties = {
                      sku   = var.sku
                      zones = var.zones
                      }
                      }

                      replace_triggers_external_values = [
                      var.sku,
                      var.zones,
                      ]
                      }
                      ```
                    x-kubernetes-preserve-unknown-fields: true
                  replaceTriggersRefs:
                    description: When the values at these paths change, the resource
                      will be replaced. When the values at these paths change, the
                      resource will be replaced.
                    items:
                      type: string
                    type: array
                  responseExportValues:
                    description: |-
                      (Dynamic) The attribute can accept either a list or a map.
                      The attribute can accept either a list or a map.

                      - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      properties = {
                      loginServer = "registry1.azurecr.io"
                      policies = {
                      quarantinePolicy = {
                      status = "disabled"
                      }
                      }
                      }
                      }
                      ```

                      - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      "login_server" = "registry1.azurecr.io"
                      "quarantine_status" = "disabled"
                      }
                      ```

                      To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
                    x-kubernetes-preserve-unknown-fields: true
                  retry:
                    description: '(Attributes) The retry object supports the following
                      attributes: (see below for nested schema)'
                    properties:
                      errorMessageRegex:
                        description: |-
                          (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                          A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                        items:
                          type: string
                        type: array
                      intervalSeconds:
                        description: |-
                          (Number) The base number of seconds to wait between retries. Default is 10.
                          The base number of seconds to wait between retries. Default is `10`.
                        type: number
                      maxIntervalSeconds:
                        description: |-
                          (Number) The maximum number of seconds to wait between retries. Default is 180.
                          The maximum number of seconds to wait between retries. Default is `180`.
                        type: number
                      multiplier:
                        description: |-
                          (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
                          The multiplier to apply to the interval between retries. Default is `1.5`.
                        type: number
                      randomizationFactor:
                        description: |-
                          RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
                          The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
                        type: number
                    type: object
                  type:
                    description: |-
                      type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
                      In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
                    type: string
                  updateHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the update request.
                      A mapping of headers to be sent with the update request.
                    type: object
                    x-kubernetes-map-type: granular
                  updateQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the update request.
                      A mapping of query parameters to be sent with the update request.
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  body:
                    description: |-
                      (Dynamic) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    x-kubernetes-preserve-unknown-fields: true
                  createHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the create request.
                      A mapping of headers to be sent with the create request.
                    type: object
                    x-kubernetes-map-type: granular
                  createQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the create request.
                      A mapping of query parameters to be sent with the create request.
                    type: object
                  deleteHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the delete request.
                      A mapping of headers to be sent with the delete request.
                    type: object
                    x-kubernetes-map-type: granular
                  deleteQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the delete request.
                      A mapping of query parameters to be sent with the delete request.
                    type: object
                  ignoreCasing:
                    description: |-
                      (Boolean) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    type: boolean
                  ignoreMissingProperty:
                    description: |-
                      diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
                      Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
                    type: boolean
                  locks:
                    description: |-
                      (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                      A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                      Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                    type: string
                  parentId:
                    description: |-
                      (String) The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                      The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                    type: string
                  readHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the read request.
                      A mapping of headers to be sent with the read request.
                    type: object
                    x-kubernetes-map-type: granular
                  readQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the read request.
                      A mapping of query parameters to be sent with the read request.
                    type: object
                  replaceTriggersExternalValues:
                    description: |-
                      (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
                      If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
                      Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
                      If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.

                      e.g. to replace a resource when either the SKU or os_type attributes change:

                      ```hcl
                      resource "azapi_data_plane_resource" "example" {
                      name = var.name
                      type = "Microsoft.AppConfiguration/configurationStores/keyValues@1.0"
                      body = {
                      properties = {
                      sku   = var.sku
                      zones = var.zones
                      }
                      }

                      replace_triggers_external_values = [
                      var.sku,
                      var.zones,
                      ]
                      }
                      ```
                    x-kubernetes-preserve-unknown-fields: true
                  replaceTriggersRefs:
                    description: When the values at these paths change, the resource
                      will be replaced. When the values at these paths change, the
                      resource will be replaced.
                    items:
                      type: string
                    type: array
                  responseExportValues:
                    description: |-
                      (Dynamic) The attribute can accept either a list or a map.
                      The attribute can accept either a list or a map.

                      - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      properties = {
                      loginServer = "registry1.azurecr.io"
                      policies = {
                      quarantinePolicy = {
                      status = "disabled"
                      }
                      }
                      }
                      }
                      ```

                      - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      "login_server" = "registry1.azurecr.io"
                      "quarantine_status" = "disabled"
                      }
                      ```

                      To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
                    x-kubernetes-preserve-unknown-fields: true
                  retry:
                    description: '(Attributes) The retry object supports the following
                      attributes: (see below for nested schema)'
                    properties:
                      errorMessageRegex:
                        description: |-
                          (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                          A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                        items:
                          type: string
                        type: array
                      intervalSeconds:
                        description: |-
                          (Number) The base number of seconds to wait between retries. Default is 10.
                          The base number of seconds to wait between retries. Default is `10`.
                        type: number
                      maxIntervalSeconds:
                        description: |-
                          (Number) The maximum number of seconds to wait between retries. Default is 180.
                          The maximum number of seconds to wait between retries. Default is `180`.
                        type: number
                      multiplier:
                        description: |-
                          (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
                          The multiplier to apply to the interval between retries. Default is `1.5`.
                        type: number
                      randomizationFactor:
                        description: |-
                          RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
                          The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
                        type: number
                    type: object
                  type:
                    description: |-
                      type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
                      In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
                    type: string
                  updateHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the update request.
                      A mapping of headers to be sent with the update request.
                    type: object
                    x-kubernetes-map-type: granular
                  updateQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the update request.
                      A mapping of query parameters to be sent with the update request.
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.parentId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.parentId)
                || (has(self.initProvider) && has(self.initProvider.parentId))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: DataPlaneResourceStatus defines the observed state of DataPlaneResource.
            properties:
              atProvider:
                properties:
                  body:
                    description: |-
                      (Dynamic) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    x-kubernetes-preserve-unknown-fields: true
                  createHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the create request.
                      A mapping of headers to be sent with the create request.
                    type: object
                    x-kubernetes-map-type: granular
                  createQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the create request.
                      A mapping of query parameters to be sent with the create request.
                    type: object
                  deleteHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the delete request.
                      A mapping of headers to be sent with the delete request.
                    type: object
                    x-kubernetes-map-type: granular
                  deleteQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the delete request.
                      A mapping of query parameters to be sent with the delete request.
                    type: object
                  id:
                    description: (String) The ID of the Azure resource.
                    type: string
                  ignoreCasing:
                    description: |-
                      (Boolean) A dynamic attribute that contains the request body.
                      A dynamic attribute that contains the request body.
                    type: boolean
                  ignoreMissingProperty:
                    description: |-
                      diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
                      Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
                    type: boolean
                  locks:
                    description: |-
                      (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                      A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                      Specifies the name of the Azure resource. Changing this forces a new resource to be created.
                    type: string
                  output:
                    description: |-
                      (Dynamic) The output HCL object containing the properties specified in response_export_values. Here are some examples to use the values.
                      The output HCL object containing the properties specified in `response_export_values`. Here are some examples to use the values.azurecr.io"
                      output "login_server" {
                      value = azapi_data_plane_resource.example.output.properties.loginServer
                      }

                      // it will output "disabled"
                      output "quarantine_policy" {
                      value = azapi_data_plane_resource.example.output.properties.policies.quarantinePolicy.status
                      }
                      ```
                    x-kubernetes-preserve-unknown-fields: true
                  parentId:
                    description: |-
                      (String) The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                      The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
                    type: string
                  readHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the read request.
                      A mapping of headers to be sent with the read request.
                    type: object
                    x-kubernetes-map-type: granular
                  readQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the read request.
                      A mapping of query parameters to be sent with the read request.
                    type: object
                  replaceTriggersExternalValues:
                    description: |-
                      (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
                      If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
                      Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
                      If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
                      Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.

                      e.g. to replace a resource when either the SKU or os_type attributes change:

                      ```hcl
                      resource "azapi_data_plane_resource" "example" {
                      name = var.name
                      type = "Microsoft.AppConfiguration/configurationStores/keyValues@1.0"
                      body = {
                      properties = {
                      sku   = var.sku
                      zones = var.zones
                      }
                      }

                      replace_triggers_external_values = [
                      var.sku,
                      var.zones,
                      ]
                      }
                      ```
                    x-kubernetes-preserve-unknown-fields: true
                  replaceTriggersRefs:
                    description: When the values at these paths change, the resource
                      will be replaced. When the values at these paths change, the
                      resource will be replaced.
                    items:
                      type: string
                    type: array
                  responseExportValues:
                    description: |-
                      (Dynamic) The attribute can accept either a list or a map.
                      The attribute can accept either a list or a map.

                      - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      properties = {
                      loginServer = "registry1.azurecr.io"
                      policies = {
                      quarantinePolicy = {
                      status = "disabled"
                      }
                      }
                      }
                      }
                      ```

                      - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.

                      ```text
                      {
                      "login_server" = "registry1.azurecr.io"
                      "quarantine_status" = "disabled"
                      }
                      ```

                      To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
                    x-kubernetes-preserve-unknown-fields: true
                  retry:
                    description: '(Attributes) The retry object supports the following
                      attributes: (see below for nested schema)'
                    properties:
                      errorMessageRegex:
                        description: |-
                          (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                          A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
                        items:
                          type: string
                        type: array
                      intervalSeconds:
                        description: |-
                          (Number) The base number of seconds to wait between retries. Default is 10.
                          The base number of seconds to wait between retries. Default is `10`.
                        type: number
                      maxIntervalSeconds:
                        description: |-
                          (Number) The maximum number of seconds to wait between retries. Default is 180.
                          The maximum number of seconds to wait between retries. Default is `180`.
                        type: number
                      multiplier:
                        description: |-
                          (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
                          The multiplier to apply to the interval between retries. Default is `1.5`.
                        type: number
                      randomizationFactor:
                        description: |-
                          RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
                          The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
                        type: number
                    type: object
                  type:
                    description: |-
                      type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
                      In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
                    type: string
                  updateHeaders:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) A mapping of headers to be sent with the update request.
                      A mapping of headers to be sent with the update request.
                    type: object
                    x-kubernetes-map-type: granular
                  updateQueryParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) A mapping of query parameters to be sent with the update request.
                      A mapping of query parameters to be sent with the update request.
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
