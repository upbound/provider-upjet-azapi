// SPDX-FileCopyrightText: 2025 Upbound Inc. <https://upbound.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta2

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1common "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

type IdentityInitParameters struct {

	// (List of String) A list of User Managed Identity ID's which should be assigned to the azure resource.
	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// The Type of Identity which should be used for this azure resource. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned,UserAssigned`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityObservation struct {

	// (List of String) A list of User Managed Identity ID's which should be assigned to the azure resource.
	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// (String) The Principal ID for the Service Principal associated with the Managed Service Identity of this Azure resource.
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Azure resource.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// (String) The Tenant ID for the Service Principal associated with the Managed Service Identity of this Azure resource.
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Azure resource.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// The Type of Identity which should be used for this azure resource. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned,UserAssigned`
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityParameters struct {

	// (List of String) A list of User Managed Identity ID's which should be assigned to the azure resource.
	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// The Type of Identity which should be used for this azure resource. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned,UserAssigned`
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResourceInitParameters struct {

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A mapping of headers to be sent with the create request.
	// A mapping of headers to be sent with the create request.
	// +mapType=granular
	CreateHeaders map[string]*string `json:"createHeaders,omitempty" tf:"create_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the create request.
	// A mapping of query parameters to be sent with the create request.
	CreateQueryParameters map[string][]*string `json:"createQueryParameters,omitempty" tf:"create_query_parameters,omitempty"`

	// (Map of String) A mapping of headers to be sent with the delete request.
	// A mapping of headers to be sent with the delete request.
	// +mapType=granular
	DeleteHeaders map[string]*string `json:"deleteHeaders,omitempty" tf:"delete_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the delete request.
	// A mapping of query parameters to be sent with the delete request.
	DeleteQueryParameters map[string][]*string `json:"deleteQueryParameters,omitempty" tf:"delete_query_parameters,omitempty"`

	// (Block List) (see below for nested schema)
	Identity []IdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// (Boolean) Whether ignore the casing of the property names in the response body. Defaults to false.
	// Whether ignore the casing of the property names in the response body. Defaults to `false`.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
	// Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// (Boolean) When set to true, the provider will ignore properties whose values are null in the body.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to false.
	// When set to `true`, the provider will ignore properties whose values are `null` in the `body`.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to `false`.
	IgnoreNullProperty *bool `json:"ignoreNullProperty,omitempty" tf:"ignore_null_property,omitempty"`

	// (String) The location of the Azure resource.
	// The location of the Azure resource.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for top level resources:
	// The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for **top level** resources:
	//
	// - resource group scope: `parent_id` should be the ID of a resource group, it's recommended to manage a resource group by azurerm_resource_group.
	// - management group scope: `parent_id` should be the ID of a management group, it's recommended to manage a management group by azurerm_management_group.
	// - extension scope: `parent_id` should be the ID of the resource you're adding the extension to.
	// - subscription scope: `parent_id` should be like \x60/subscriptions/00000000-0000-0000-0000-000000000000\x60
	// - tenant scope: `parent_id` should be /
	//
	// For child level resources, the `parent_id` should be the ID of its parent resource, for example, subnet resource's `parent_id` is the ID of the vnet.
	//
	// For type `Microsoft.Resources/resourceGroups`, the `parent_id` could be omitted, it defaults to subscription ID specified in provider or the default subscription (You could check the default subscription by azure cli command: `az account show`).
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// (Map of String) A mapping of headers to be sent with the read request.
	// A mapping of headers to be sent with the read request.
	// +mapType=granular
	ReadHeaders map[string]*string `json:"readHeaders,omitempty" tf:"read_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the read request.
	// A mapping of query parameters to be sent with the read request.
	ReadQueryParameters map[string][]*string `json:"readQueryParameters,omitempty" tf:"read_query_parameters,omitempty"`

	// (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
	// If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	// Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
	// If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	//
	// e.g. to replace a resource when either the SKU or os_type attributes change:
	//
	// ```hcl
	// resource "azapi_resource" "example" {
	// name      = var.name
	// type      = "Microsoft.Network/publicIPAddresses@2023-11-01"
	// parent_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example"
	// body = {
	// properties = {
	// sku   = var.sku
	// zones = var.zones
	// }
	// }
	//
	// replace_triggers_external_values = [
	// var.sku,
	// var.zones,
	// ]
	// }
	// ```
	ReplaceTriggersExternalValues *v1.JSON `json:"replaceTriggersExternalValues,omitempty" tf:"replace_triggers_external_values,omitempty"`

	// When the values at these paths change, the resource will be replaced. When the values at these paths change, the resource will be replaced.
	ReplaceTriggersRefs []*string `json:"replaceTriggersRefs,omitempty" tf:"replace_triggers_refs,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	Retry *ResourceRetryInitParameters `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Boolean) Whether enabled the validation on type and body with embedded schema. Defaults to true.
	// Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	// A dynamic attribute that contains the write-only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	SensitiveBody *v1.JSON `json:"sensitiveBody,omitempty" tf:"sensitive_body,omitempty"`

	// (Map of String) A map where the key is the path to the property in sensitive_body and the value is the version of the property. The key is a string in the format of path.to.property[index].subproperty, where index is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// A map where the key is the path to the property in `sensitive_body` and the value is the version of the property. The key is a string in the format of `path.to.property[index].subproperty`, where `index` is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// +mapType=granular
	SensitiveBodyVersion map[string]*string `json:"sensitiveBodyVersion,omitempty" tf:"sensitive_body_version,omitempty"`

	// (Map of String) A mapping of tags which should be assigned to the Azure resource.
	// A mapping of tags which should be assigned to the Azure resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Map of String) A mapping of headers to be sent with the update request.
	// A mapping of headers to be sent with the update request.
	// +mapType=granular
	UpdateHeaders map[string]*string `json:"updateHeaders,omitempty" tf:"update_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the update request.
	// A mapping of query parameters to be sent with the update request.
	UpdateQueryParameters map[string][]*string `json:"updateQueryParameters,omitempty" tf:"update_query_parameters,omitempty"`
}

type ResourceObservation struct {

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A mapping of headers to be sent with the create request.
	// A mapping of headers to be sent with the create request.
	// +mapType=granular
	CreateHeaders map[string]*string `json:"createHeaders,omitempty" tf:"create_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the create request.
	// A mapping of query parameters to be sent with the create request.
	CreateQueryParameters map[string][]*string `json:"createQueryParameters,omitempty" tf:"create_query_parameters,omitempty"`

	// (Map of String) A mapping of headers to be sent with the delete request.
	// A mapping of headers to be sent with the delete request.
	// +mapType=granular
	DeleteHeaders map[string]*string `json:"deleteHeaders,omitempty" tf:"delete_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the delete request.
	// A mapping of query parameters to be sent with the delete request.
	DeleteQueryParameters map[string][]*string `json:"deleteQueryParameters,omitempty" tf:"delete_query_parameters,omitempty"`

	// (String) The ID of the Azure resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List) (see below for nested schema)
	Identity []IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// (Boolean) Whether ignore the casing of the property names in the response body. Defaults to false.
	// Whether ignore the casing of the property names in the response body. Defaults to `false`.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
	// Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// (Boolean) When set to true, the provider will ignore properties whose values are null in the body.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to false.
	// When set to `true`, the provider will ignore properties whose values are `null` in the `body`.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to `false`.
	IgnoreNullProperty *bool `json:"ignoreNullProperty,omitempty" tf:"ignore_null_property,omitempty"`

	// (String) The location of the Azure resource.
	// The location of the Azure resource.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Dynamic) The output HCL object containing the properties specified in response_export_values. Here are some examples to use the values.
	// The output HCL object containing the properties specified in `response_export_values`. Here are some examples to use the values.azurecr.io"
	// output "login_server" {
	// value = azapi_resource.example.output.properties.loginServer
	// }
	//
	// // it will output "disabled"
	// output "quarantine_policy" {
	// value = azapi_resource.example.output.properties.policies.quarantinePolicy.status
	// }
	// ```
	Output *v1.JSON `json:"output,omitempty" tf:"output,omitempty"`

	// (String) The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for top level resources:
	// The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for **top level** resources:
	//
	// - resource group scope: `parent_id` should be the ID of a resource group, it's recommended to manage a resource group by azurerm_resource_group.
	// - management group scope: `parent_id` should be the ID of a management group, it's recommended to manage a management group by azurerm_management_group.
	// - extension scope: `parent_id` should be the ID of the resource you're adding the extension to.
	// - subscription scope: `parent_id` should be like \x60/subscriptions/00000000-0000-0000-0000-000000000000\x60
	// - tenant scope: `parent_id` should be /
	//
	// For child level resources, the `parent_id` should be the ID of its parent resource, for example, subnet resource's `parent_id` is the ID of the vnet.
	//
	// For type `Microsoft.Resources/resourceGroups`, the `parent_id` could be omitted, it defaults to subscription ID specified in provider or the default subscription (You could check the default subscription by azure cli command: `az account show`).
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// (Map of String) A mapping of headers to be sent with the read request.
	// A mapping of headers to be sent with the read request.
	// +mapType=granular
	ReadHeaders map[string]*string `json:"readHeaders,omitempty" tf:"read_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the read request.
	// A mapping of query parameters to be sent with the read request.
	ReadQueryParameters map[string][]*string `json:"readQueryParameters,omitempty" tf:"read_query_parameters,omitempty"`

	// (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
	// If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	// Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
	// If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	//
	// e.g. to replace a resource when either the SKU or os_type attributes change:
	//
	// ```hcl
	// resource "azapi_resource" "example" {
	// name      = var.name
	// type      = "Microsoft.Network/publicIPAddresses@2023-11-01"
	// parent_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example"
	// body = {
	// properties = {
	// sku   = var.sku
	// zones = var.zones
	// }
	// }
	//
	// replace_triggers_external_values = [
	// var.sku,
	// var.zones,
	// ]
	// }
	// ```
	ReplaceTriggersExternalValues *v1.JSON `json:"replaceTriggersExternalValues,omitempty" tf:"replace_triggers_external_values,omitempty"`

	// When the values at these paths change, the resource will be replaced. When the values at these paths change, the resource will be replaced.
	ReplaceTriggersRefs []*string `json:"replaceTriggersRefs,omitempty" tf:"replace_triggers_refs,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	Retry *ResourceRetryObservation `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Boolean) Whether enabled the validation on type and body with embedded schema. Defaults to true.
	// Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	// A dynamic attribute that contains the write-only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	SensitiveBody *v1.JSON `json:"sensitiveBody,omitempty" tf:"sensitive_body,omitempty"`

	// (Map of String) A map where the key is the path to the property in sensitive_body and the value is the version of the property. The key is a string in the format of path.to.property[index].subproperty, where index is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// A map where the key is the path to the property in `sensitive_body` and the value is the version of the property. The key is a string in the format of `path.to.property[index].subproperty`, where `index` is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// +mapType=granular
	SensitiveBodyVersion map[string]*string `json:"sensitiveBodyVersion,omitempty" tf:"sensitive_body_version,omitempty"`

	// (Map of String) A mapping of tags which should be assigned to the Azure resource.
	// A mapping of tags which should be assigned to the Azure resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Map of String) A mapping of headers to be sent with the update request.
	// A mapping of headers to be sent with the update request.
	// +mapType=granular
	UpdateHeaders map[string]*string `json:"updateHeaders,omitempty" tf:"update_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the update request.
	// A mapping of query parameters to be sent with the update request.
	UpdateQueryParameters map[string][]*string `json:"updateQueryParameters,omitempty" tf:"update_query_parameters,omitempty"`
}

type ResourceParameters struct {

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	// +kubebuilder:validation:Optional
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A mapping of headers to be sent with the create request.
	// A mapping of headers to be sent with the create request.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CreateHeaders map[string]*string `json:"createHeaders,omitempty" tf:"create_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the create request.
	// A mapping of query parameters to be sent with the create request.
	// +kubebuilder:validation:Optional
	CreateQueryParameters map[string][]*string `json:"createQueryParameters,omitempty" tf:"create_query_parameters,omitempty"`

	// (Map of String) A mapping of headers to be sent with the delete request.
	// A mapping of headers to be sent with the delete request.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DeleteHeaders map[string]*string `json:"deleteHeaders,omitempty" tf:"delete_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the delete request.
	// A mapping of query parameters to be sent with the delete request.
	// +kubebuilder:validation:Optional
	DeleteQueryParameters map[string][]*string `json:"deleteQueryParameters,omitempty" tf:"delete_query_parameters,omitempty"`

	// (Block List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// (Boolean) Whether ignore the casing of the property names in the response body. Defaults to false.
	// Whether ignore the casing of the property names in the response body. Defaults to `false`.
	// +kubebuilder:validation:Optional
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// diff. Defaults to true. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in lifecycle.ignore_changes because it will make the sensitive fields unable to update.
	// Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`. It's recommend to enable this option when some sensitive properties are not returned in response body, instead of setting them in `lifecycle.ignore_changes` because it will make the sensitive fields unable to update.
	// +kubebuilder:validation:Optional
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// (Boolean) When set to true, the provider will ignore properties whose values are null in the body.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to false.
	// When set to `true`, the provider will ignore properties whose values are `null` in the `body`.
	// These properties will not be included in the request body sent to the API, and the difference will not be shown in the plan output. Defaults to `false`.
	// +kubebuilder:validation:Optional
	IgnoreNullProperty *bool `json:"ignoreNullProperty,omitempty" tf:"ignore_null_property,omitempty"`

	// (String) The location of the Azure resource.
	// The location of the Azure resource.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// +kubebuilder:validation:Optional
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for top level resources:
	// The ID of the azure resource in which this resource is created. It supports different kinds of deployment scope for **top level** resources:
	//
	// - resource group scope: `parent_id` should be the ID of a resource group, it's recommended to manage a resource group by azurerm_resource_group.
	// - management group scope: `parent_id` should be the ID of a management group, it's recommended to manage a management group by azurerm_management_group.
	// - extension scope: `parent_id` should be the ID of the resource you're adding the extension to.
	// - subscription scope: `parent_id` should be like \x60/subscriptions/00000000-0000-0000-0000-000000000000\x60
	// - tenant scope: `parent_id` should be /
	//
	// For child level resources, the `parent_id` should be the ID of its parent resource, for example, subnet resource's `parent_id` is the ID of the vnet.
	//
	// For type `Microsoft.Resources/resourceGroups`, the `parent_id` could be omitted, it defaults to subscription ID specified in provider or the default subscription (You could check the default subscription by azure cli command: `az account show`).
	// +kubebuilder:validation:Optional
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// (Map of String) A mapping of headers to be sent with the read request.
	// A mapping of headers to be sent with the read request.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	ReadHeaders map[string]*string `json:"readHeaders,omitempty" tf:"read_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the read request.
	// A mapping of query parameters to be sent with the read request.
	// +kubebuilder:validation:Optional
	ReadQueryParameters map[string][]*string `json:"readQueryParameters,omitempty" tf:"read_query_parameters,omitempty"`

	// (Dynamic) Will trigger a replace of the resource when the value changes and is not null. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a dynamic, so practitioners can compose the input however they wish. For a "break glass" set the value to null to prevent the plan modifier taking effect.
	// If you have null values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	// Will trigger a replace of the resource when the value changes and is not `null`. This can be used by practitioners to force a replace of the resource when certain values change, e.g. changing the SKU of a virtual machine based on the value of variables or locals. The value is a `dynamic`, so practitioners can compose the input however they wish. For a "break glass" set the value to `null` to prevent the plan modifier taking effect.
	// If you have `null` values that you do want to be tracked as affecting the resource replacement, include these inside an object.
	// Advanced use cases are possible and resource replacement can be triggered by values external to the resource, for example when a dependent resource changes.
	//
	// e.g. to replace a resource when either the SKU or os_type attributes change:
	//
	// ```hcl
	// resource "azapi_resource" "example" {
	// name      = var.name
	// type      = "Microsoft.Network/publicIPAddresses@2023-11-01"
	// parent_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example"
	// body = {
	// properties = {
	// sku   = var.sku
	// zones = var.zones
	// }
	// }
	//
	// replace_triggers_external_values = [
	// var.sku,
	// var.zones,
	// ]
	// }
	// ```
	// +kubebuilder:validation:Optional
	ReplaceTriggersExternalValues *v1.JSON `json:"replaceTriggersExternalValues,omitempty" tf:"replace_triggers_external_values,omitempty"`

	// When the values at these paths change, the resource will be replaced. When the values at these paths change, the resource will be replaced.
	// +kubebuilder:validation:Optional
	ReplaceTriggersRefs []*string `json:"replaceTriggersRefs,omitempty" tf:"replace_triggers_refs,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	// +kubebuilder:validation:Optional
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	// +kubebuilder:validation:Optional
	Retry *ResourceRetryParameters `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Boolean) Whether enabled the validation on type and body with embedded schema. Defaults to true.
	// Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.
	// +kubebuilder:validation:Optional
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	// A dynamic attribute that contains the write-only properties of the request body. This will be merge-patched to the body to construct the actual request body.
	// +kubebuilder:validation:Optional
	SensitiveBody *v1.JSON `json:"sensitiveBody,omitempty" tf:"sensitive_body,omitempty"`

	// (Map of String) A map where the key is the path to the property in sensitive_body and the value is the version of the property. The key is a string in the format of path.to.property[index].subproperty, where index is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// A map where the key is the path to the property in `sensitive_body` and the value is the version of the property. The key is a string in the format of `path.to.property[index].subproperty`, where `index` is the index of the item in an array. When the version is changed, the property will be included in the request body, otherwise it will be omitted from the request body.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	SensitiveBodyVersion map[string]*string `json:"sensitiveBodyVersion,omitempty" tf:"sensitive_body_version,omitempty"`

	// (Map of String) A mapping of tags which should be assigned to the Azure resource.
	// A mapping of tags which should be assigned to the Azure resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (Map of String) A mapping of headers to be sent with the update request.
	// A mapping of headers to be sent with the update request.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	UpdateHeaders map[string]*string `json:"updateHeaders,omitempty" tf:"update_headers,omitempty"`

	// (Map of List of String) A mapping of query parameters to be sent with the update request.
	// A mapping of query parameters to be sent with the update request.
	// +kubebuilder:validation:Optional
	UpdateQueryParameters map[string][]*string `json:"updateQueryParameters,omitempty" tf:"update_query_parameters,omitempty"`
}

type ResourceRetryInitParameters struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	ErrorMessageRegex []*string `json:"errorMessageRegex,omitempty" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

type ResourceRetryObservation struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	ErrorMessageRegex []*string `json:"errorMessageRegex,omitempty" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

type ResourceRetryParameters struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// +kubebuilder:validation:Optional
	ErrorMessageRegex []*string `json:"errorMessageRegex" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	// +kubebuilder:validation:Optional
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	// +kubebuilder:validation:Optional
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	// +kubebuilder:validation:Optional
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	// +kubebuilder:validation:Optional
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

// ResourceSpec defines the desired state of Resource
type ResourceSpec struct {
	v1common.ResourceSpec `json:",inline"`
	ForProvider           ResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourceInitParameters `json:"initProvider,omitempty"`
}

// ResourceStatus defines the observed state of Resource.
type ResourceStatus struct {
	v1common.ResourceStatus `json:",inline"`
	AtProvider              ResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Resource is the Schema for the Resources API. This resource can manage any Azure Resource Manager resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azapi}
type Resource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   ResourceSpec   `json:"spec"`
	Status ResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceList contains a list of Resources
type ResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Resource `json:"items"`
}

// Repository type metadata.
var (
	Resource_Kind             = "Resource"
	Resource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Resource_Kind}.String()
	Resource_KindAPIVersion   = Resource_Kind + "." + CRDGroupVersion.String()
	Resource_GroupVersionKind = CRDGroupVersion.WithKind(Resource_Kind)
)

func init() {
	SchemeBuilder.Register(&Resource{}, &ResourceList{})
}
