// SPDX-FileCopyrightText: 2025 Upbound Inc. <https://upbound.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type DataPlaneResourceInitParameters struct {

	// A JSON object that contains the request body used to create and update data plane resource.
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <api-version> is version of the API used to manage this azure data plane resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DataPlaneResourceObservation struct {

	// A JSON object that contains the request body used to create and update data plane resource.
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// The ID of the azure resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The output json containing the properties specified in response_export_values. Here're some examples to decode json and extract the value.
	Output *string `json:"output,omitempty" tf:"output,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <api-version> is version of the API used to manage this azure data plane resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DataPlaneResourceParameters struct {

	// A JSON object that contains the request body used to create and update data plane resource.
	// +kubebuilder:validation:Optional
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	// +kubebuilder:validation:Optional
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// +kubebuilder:validation:Optional
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	// +kubebuilder:validation:Optional
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <api-version> is version of the API used to manage this azure data plane resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// DataPlaneResourceSpec defines the desired state of DataPlaneResource
type DataPlaneResourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DataPlaneResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DataPlaneResourceInitParameters `json:"initProvider,omitempty"`
}

// DataPlaneResourceStatus defines the observed state of DataPlaneResource.
type DataPlaneResourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DataPlaneResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// DataPlaneResource is the Schema for the DataPlaneResources API. Manages a Azure data plane resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azapi}
type DataPlaneResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parentId) || (has(self.initProvider) && has(self.initProvider.parentId))",message="spec.forProvider.parentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   DataPlaneResourceSpec   `json:"spec"`
	Status DataPlaneResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DataPlaneResourceList contains a list of DataPlaneResources
type DataPlaneResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DataPlaneResource `json:"items"`
}

// Repository type metadata.
var (
	DataPlaneResource_Kind             = "DataPlaneResource"
	DataPlaneResource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DataPlaneResource_Kind}.String()
	DataPlaneResource_KindAPIVersion   = DataPlaneResource_Kind + "." + CRDGroupVersion.String()
	DataPlaneResource_GroupVersionKind = CRDGroupVersion.WithKind(DataPlaneResource_Kind)
)

func init() {
	SchemeBuilder.Register(&DataPlaneResource{}, &DataPlaneResourceList{})
}
