// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IdentityInitParameters struct {

	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Type of Identity which should be used for this azure resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned,UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityObservation struct {

	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Principal ID for the Service Principal associated with the Managed Service Identity of this azure resource.
	PrincipalID *string `json:"principalId,omitempty" tf:"principal_id,omitempty"`

	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this azure resource.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// The Type of Identity which should be used for this azure resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned,UserAssigned.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IdentityParameters struct {

	// A list of User Managed Identity ID's which should be assigned to the azure resource.
	// +kubebuilder:validation:Optional
	IdentityIds []*string `json:"identityIds,omitempty" tf:"identity_ids,omitempty"`

	// The Type of Identity which should be used for this azure resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned,UserAssigned.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResourceInitParameters struct {

	// A JSON object that contains the request body used to create and update azure resource.
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// A identity block as defined below.
	Identity []IdentityInitParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// A list of properties that should be ignored when comparing the body with its current state.
	IgnoreBodyChanges []*string `json:"ignoreBodyChanges,omitempty" tf:"ignore_body_changes,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// The Azure Region where the azure resource should exist.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created. It supports different kinds of deployment scope for top level resources:
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// Whether to remove special characters in resource name. Defaults to false.
	RemovingSpecialChars *bool `json:"removingSpecialChars,omitempty" tf:"removing_special_chars,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// Whether enabled the validation on type and body with embedded schema. Defaults to true.
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// A mapping of tags which should be assigned to the azure resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts.
	// <api-version> is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceObservation struct {

	// A JSON object that contains the request body used to create and update azure resource.
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// The ID of the azure resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A identity block as defined below.
	Identity []IdentityObservation `json:"identity,omitempty" tf:"identity,omitempty"`

	// A list of properties that should be ignored when comparing the body with its current state.
	IgnoreBodyChanges []*string `json:"ignoreBodyChanges,omitempty" tf:"ignore_body_changes,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// The Azure Region where the azure resource should exist.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The output json containing the properties specified in response_export_values. Here're some examples to decode json and extract the value.
	Output *string `json:"output,omitempty" tf:"output,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created. It supports different kinds of deployment scope for top level resources:
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// Whether to remove special characters in resource name. Defaults to false.
	RemovingSpecialChars *bool `json:"removingSpecialChars,omitempty" tf:"removing_special_chars,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// Whether enabled the validation on type and body with embedded schema. Defaults to true.
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// A mapping of tags which should be assigned to the azure resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts.
	// <api-version> is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceParameters struct {

	// A JSON object that contains the request body used to create and update azure resource.
	// +kubebuilder:validation:Optional
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// A identity block as defined below.
	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// A list of properties that should be ignored when comparing the body with its current state.
	// +kubebuilder:validation:Optional
	IgnoreBodyChanges []*string `json:"ignoreBodyChanges,omitempty" tf:"ignore_body_changes,omitempty"`

	// Whether ignore incorrect casing returned in body to suppress plan-diff. Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreCasing *bool `json:"ignoreCasing,omitempty" tf:"ignore_casing,omitempty"`

	// Whether ignore not returned properties like credentials in body to suppress plan-diff. Defaults to true.
	// +kubebuilder:validation:Optional
	IgnoreMissingProperty *bool `json:"ignoreMissingProperty,omitempty" tf:"ignore_missing_property,omitempty"`

	// The Azure Region where the azure resource should exist.
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// +kubebuilder:validation:Optional
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// Specifies the name of the azure resource. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the azure resource in which this resource is created. Changing this forces a new resource to be created. It supports different kinds of deployment scope for top level resources:
	// +kubebuilder:validation:Optional
	ParentID *string `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// Whether to remove special characters in resource name. Defaults to false.
	// +kubebuilder:validation:Optional
	RemovingSpecialChars *bool `json:"removingSpecialChars,omitempty" tf:"removing_special_chars,omitempty"`

	// A list of path that needs to be exported from response body.
	// Setting it to ["*"] will export the full response body.
	// Here's an example. If it sets to ["properties.loginServer", "properties.policies.quarantinePolicy.status"], it will set the following json to computed property output.
	// +kubebuilder:validation:Optional
	ResponseExportValues []*string `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// Whether enabled the validation on type and body with embedded schema. Defaults to true.
	// +kubebuilder:validation:Optional
	SchemaValidationEnabled *bool `json:"schemaValidationEnabled,omitempty" tf:"schema_validation_enabled,omitempty"`

	// A mapping of tags which should be assigned to the azure resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// It is in a format like <resource-type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts.
	// <api-version> is version of the API used to manage this azure resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// ResourceSpec defines the desired state of Resource
type ResourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourceInitParameters `json:"initProvider,omitempty"`
}

// ResourceStatus defines the observed state of Resource.
type ResourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Resource is the Schema for the Resources API. Manages a Azure resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azapi}
type Resource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   ResourceSpec   `json:"spec"`
	Status ResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceList contains a list of Resources
type ResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Resource `json:"items"`
}

// Repository type metadata.
var (
	Resource_Kind             = "Resource"
	Resource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Resource_Kind}.String()
	Resource_KindAPIVersion   = Resource_Kind + "." + CRDGroupVersion.String()
	Resource_GroupVersionKind = CRDGroupVersion.WithKind(Resource_Kind)
)

func init() {
	SchemeBuilder.Register(&Resource{}, &ResourceList{})
}
