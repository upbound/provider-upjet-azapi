// SPDX-FileCopyrightText: 2025 Upbound Inc. <https://upbound.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1common "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

type ResourceActionInitParameters struct {

	// (String) The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	// The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A map of headers to include in the request
	// A map of headers to include in the request
	// +mapType=granular
	Headers map[string]*string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the HTTP method of the azure resource action. Allowed values are POST, PATCH, PUT and DELETE. Defaults to POST.
	// Specifies the HTTP method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (Map of List of String) A map of query parameters to include in the request
	// A map of query parameters to include in the request
	QueryParameters map[string][]*string `json:"queryParameters,omitempty" tf:"query_parameters,omitempty"`

	// (String) The ID of an existing Azure source.
	// The ID of an existing Azure source.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	Retry *ResourceActionRetryInitParameters `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	SensitiveResponseExportValues *v1.JSON `json:"sensitiveResponseExportValues,omitempty" tf:"sensitive_response_export_values,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) When to perform the action, value must be one of: apply, destroy. Default is apply.
	// When to perform the action, value must be one of: `apply`, `destroy`. Default is `apply`.
	When *string `json:"when,omitempty" tf:"when,omitempty"`
}

type ResourceActionObservation struct {

	// (String) The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	// The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A map of headers to include in the request
	// A map of headers to include in the request
	// +mapType=granular
	Headers map[string]*string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (String) The ID of the Azure resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the HTTP method of the azure resource action. Allowed values are POST, PATCH, PUT and DELETE. Defaults to POST.
	// Specifies the HTTP method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (Dynamic) The output HCL object containing the properties specified in response_export_values. Here are some examples to use the values.
	// The output HCL object containing the properties specified in `response_export_values`. Here are some examples to use the values.azurecr.io"
	// output "login_server" {
	// value = azapi_resource_action.example.output.properties.loginServer
	// }
	//
	// // it will output "disabled"
	// output "quarantine_policy" {
	// value = azapi_resource_action.example.output.properties.policies.quarantinePolicy.status
	// }
	// ```
	Output *v1.JSON `json:"output,omitempty" tf:"output,omitempty"`

	// (Map of List of String) A map of query parameters to include in the request
	// A map of query parameters to include in the request
	QueryParameters map[string][]*string `json:"queryParameters,omitempty" tf:"query_parameters,omitempty"`

	// (String) The ID of an existing Azure source.
	// The ID of an existing Azure source.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	Retry *ResourceActionRetryObservation `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	SensitiveResponseExportValues *v1.JSON `json:"sensitiveResponseExportValues,omitempty" tf:"sensitive_response_export_values,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) When to perform the action, value must be one of: apply, destroy. Default is apply.
	// When to perform the action, value must be one of: `apply`, `destroy`. Default is `apply`.
	When *string `json:"when,omitempty" tf:"when,omitempty"`
}

type ResourceActionParameters struct {

	// (String) The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	// The name of the resource action. It's also possible to make HTTP requests towards the resource ID if leave this field empty.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// (Dynamic) A dynamic attribute that contains the request body.
	// A dynamic attribute that contains the request body.
	// +kubebuilder:validation:Optional
	Body *v1.JSON `json:"body,omitempty" tf:"body,omitempty"`

	// (Map of String) A map of headers to include in the request
	// A map of headers to include in the request
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Headers map[string]*string `json:"headers,omitempty" tf:"headers,omitempty"`

	// (List of String) A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.
	// +kubebuilder:validation:Optional
	Locks []*string `json:"locks,omitempty" tf:"locks,omitempty"`

	// (String) Specifies the HTTP method of the azure resource action. Allowed values are POST, PATCH, PUT and DELETE. Defaults to POST.
	// Specifies the HTTP method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
	// +kubebuilder:validation:Optional
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// (Map of List of String) A map of query parameters to include in the request
	// A map of query parameters to include in the request
	// +kubebuilder:validation:Optional
	QueryParameters map[string][]*string `json:"queryParameters,omitempty" tf:"query_parameters,omitempty"`

	// (String) The ID of an existing Azure source.
	// The ID of an existing Azure source.
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	// +kubebuilder:validation:Optional
	ResponseExportValues *v1.JSON `json:"responseExportValues,omitempty" tf:"response_export_values,omitempty"`

	// (Attributes) The retry object supports the following attributes: (see below for nested schema)
	// +kubebuilder:validation:Optional
	Retry *ResourceActionRetryParameters `json:"retry,omitempty" tf:"retry,omitempty"`

	// (Dynamic) The attribute can accept either a list or a map.
	// The attribute can accept either a list or a map.
	//
	// - **List**: A list of paths that need to be exported from the response body. Setting it to `["*"]` will export the full response body. Here's an example. If it sets to `["properties.loginServer", "properties.policies.quarantinePolicy.status"]`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// properties = {
	// loginServer = "registry1.azurecr.io"
	// policies = {
	// quarantinePolicy = {
	// status = "disabled"
	// }
	// }
	// }
	// }
	// ```
	//
	// - **Map**: A map where the key is the name for the result and the value is a JMESPath query string to filter the response. Here's an example. If it sets to `{"login_server": "properties.loginServer", "quarantine_status": "properties.policies.quarantinePolicy.status"}`, it will set the following HCL object to the computed property output.
	//
	// ```text
	// {
	// "login_server" = "registry1.azurecr.io"
	// "quarantine_status" = "disabled"
	// }
	// ```
	//
	// To learn more about JMESPath, visit [JMESPath](https://jmespath.org/).
	// +kubebuilder:validation:Optional
	SensitiveResponseExportValues *v1.JSON `json:"sensitiveResponseExportValues,omitempty" tf:"sensitive_response_export_values,omitempty"`

	// type>@<api-version>. <resource-type> is the Azure resource type, for example, Microsoft.Storage/storageAccounts. <api-version> is version of the API used to manage this azure resource.
	// In a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`. `<api-version>` is version of the API used to manage this azure resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) When to perform the action, value must be one of: apply, destroy. Default is apply.
	// When to perform the action, value must be one of: `apply`, `destroy`. Default is `apply`.
	// +kubebuilder:validation:Optional
	When *string `json:"when,omitempty" tf:"when,omitempty"`
}

type ResourceActionRetryInitParameters struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	ErrorMessageRegex []*string `json:"errorMessageRegex,omitempty" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

type ResourceActionRetryObservation struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	ErrorMessageRegex []*string `json:"errorMessageRegex,omitempty" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

type ResourceActionRetryParameters struct {

	// (List of String) A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// A list of regular expressions to match against error messages. If any of the regular expressions match, the request will be retried.
	// +kubebuilder:validation:Optional
	ErrorMessageRegex []*string `json:"errorMessageRegex" tf:"error_message_regex,omitempty"`

	// (Number) The base number of seconds to wait between retries. Default is 10.
	// The base number of seconds to wait between retries. Default is `10`.
	// +kubebuilder:validation:Optional
	IntervalSeconds *float64 `json:"intervalSeconds,omitempty" tf:"interval_seconds,omitempty"`

	// (Number) The maximum number of seconds to wait between retries. Default is 180.
	// The maximum number of seconds to wait between retries. Default is `180`.
	// +kubebuilder:validation:Optional
	MaxIntervalSeconds *float64 `json:"maxIntervalSeconds,omitempty" tf:"max_interval_seconds,omitempty"`

	// (Number, Deprecated) The multiplier to apply to the interval between retries. Default is 1.5.
	// The multiplier to apply to the interval between retries. Default is `1.5`.
	// +kubebuilder:validation:Optional
	Multiplier *float64 `json:"multiplier,omitempty" tf:"multiplier,omitempty"`

	// RandomizationFactor, 1 + RandomizationFactor]). Therefore set to zero 0.0 for no randomization. Default is 0.5.
	// The randomization factor to apply to the interval between retries. The formula for the randomized interval is: `RetryInterval * (random value in range [1 - RandomizationFactor, 1 + RandomizationFactor])`. Therefore set to zero `0.0` for no randomization. Default is `0.5`.
	// +kubebuilder:validation:Optional
	RandomizationFactor *float64 `json:"randomizationFactor,omitempty" tf:"randomization_factor,omitempty"`
}

// ResourceActionSpec defines the desired state of ResourceAction
type ResourceActionSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ResourceActionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourceActionInitParameters `json:"initProvider,omitempty"`
}

// ResourceActionStatus defines the observed state of ResourceAction.
type ResourceActionStatus struct {
	v1common.ResourceStatus `json:",inline"`
	AtProvider              ResourceActionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ResourceAction is the Schema for the ResourceActions API. This resource allows you to perform an action on an existing Azure resource.g., starting or stopping an Azure Virtual Machine.	Please note that when deleting this resource, no action will be performed on the Azure resource unless the when argument is set to destroy.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azapi}
type ResourceAction struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceId) || (has(self.initProvider) && has(self.initProvider.resourceId))",message="spec.forProvider.resourceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   ResourceActionSpec   `json:"spec"`
	Status ResourceActionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceActionList contains a list of ResourceActions
type ResourceActionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ResourceAction `json:"items"`
}

// Repository type metadata.
var (
	ResourceAction_Kind             = "ResourceAction"
	ResourceAction_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ResourceAction_Kind}.String()
	ResourceAction_KindAPIVersion   = ResourceAction_Kind + "." + CRDGroupVersion.String()
	ResourceAction_GroupVersionKind = CRDGroupVersion.WithKind(ResourceAction_Kind)
)

func init() {
	SchemeBuilder.Register(&ResourceAction{}, &ResourceActionList{})
}
